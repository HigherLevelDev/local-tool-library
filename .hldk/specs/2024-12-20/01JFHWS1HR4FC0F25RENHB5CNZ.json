{
  "spec": "(base) adam ~/dev/higherleveldev/fullstack-starter [main] $ ./restartDocker.sh\nStopping Docker containers...\n[+] Running 2/0\n ‚úî Container docker-app-1  Removed                                                                                                        0.0s \n ‚úî Network docker_default  Removed                                                                                                        0.1s \nStarting Docker containers...\n[+] Building 2.9s (25/25) FINISHED                                                                                        docker:desktop-linux\n => [app internal] load build definition from Dockerfile                                                                                  0.0s\n => => transferring dockerfile: 1.06kB                                                                                                    0.0s\n => WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 2)                                                            0.0s\n => WARN: FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 10)                                                           0.0s\n => [app internal] load metadata for docker.io/library/node:20-alpine                                                                     0.4s\n => [app internal] load .dockerignore                                                                                                     0.0s\n => => transferring context: 2B                                                                                                           0.0s\n => [app internal] load build context                                                                                                     1.9s\n => => transferring context: 11.23MB                                                                                                      1.9s\n => [app backend-builder 1/6] FROM docker.io/library/node:20-alpine@sha256:426f843809ae05f324883afceebaa2b9cab9cb697097dbb1a2a7a41c5701d  0.0s\n => => resolve docker.io/library/node:20-alpine@sha256:426f843809ae05f324883afceebaa2b9cab9cb697097dbb1a2a7a41c5701de72                   0.0s\n => CACHED [app stage-2 2/9] WORKDIR /app                                                                                                 0.0s\n => CACHED [app stage-2 3/9] RUN apk add --no-cache sqlite                                                                                0.0s\n => CACHED [app frontend-builder 2/6] WORKDIR /app/frontend                                                                               0.0s\n => CACHED [app frontend-builder 3/6] COPY frontend/package.json frontend/pnpm-lock.yaml ./                                               0.0s\n => CACHED [app frontend-builder 4/6] RUN npm install -g pnpm && pnpm install                                                             0.0s\n => CACHED [app frontend-builder 5/6] COPY frontend/ ./                                                                                   0.0s\n => CACHED [app frontend-builder 6/6] RUN pnpm build                                                                                      0.0s\n => CACHED [app stage-2 4/9] COPY --from=frontend-builder /app/frontend/dist /app/frontend/dist                                           0.0s\n => CACHED [app backend-builder 2/6] WORKDIR /app/backend                                                                                 0.0s\n => CACHED [app backend-builder 3/6] COPY backend/package.json backend/pnpm-lock.yaml ./                                                  0.0s\n => CACHED [app backend-builder 4/6] RUN npm install -g pnpm && pnpm install                                                              0.0s\n => CACHED [app backend-builder 5/6] COPY backend/ ./                                                                                     0.0s\n => CACHED [app backend-builder 6/6] RUN pnpm build                                                                                       0.0s\n => CACHED [app stage-2 5/9] COPY --from=backend-builder /app/backend/dist /app/backend/dist                                              0.0s\n => CACHED [app stage-2 6/9] COPY --from=backend-builder /app/backend/node_modules /app/backend/node_modules                              0.0s\n => CACHED [app stage-2 7/9] COPY --from=backend-builder /app/backend/package.json /app/backend/                                          0.0s\n => [app stage-2 8/9] COPY *.sh /app/                                                                                                     0.3s\n => [app stage-2 9/9] RUN chmod +x /app/*.sh                                                                                              0.1s\n => [app] exporting to image                                                                                                              0.1s\n => => exporting layers                                                                                                                   0.0s\n => => exporting manifest sha256:ce5b269c382f41340f16ba992345df1649b1199a6baf1fa45ab0ededd08f791d                                         0.0s\n => => exporting config sha256:e3318f5b6ec5e9a8aea22154d8a29d5fc92e769a7f0a9142f1c89067f13d9e9e                                           0.0s\n => => exporting attestation manifest sha256:58b9ff2c75e5c8cc8a6d35a9bc826ce25d7513c7c73ea57f86b9ddb545f1f87a                             0.0s\n => => exporting manifest list sha256:75f5c857ce790492f738e2ae718808b0cccb9a9c246c14757a88729560193e6a                                    0.0s\n => => naming to docker.io/library/docker-app:latest                                                                                      0.0s\n => => unpacking to docker.io/library/docker-app:latest                                                                                   0.0s\n => [app] resolving provenance for metadata file                                                                                          0.0s\n[+] Running 2/2\n ‚úî Network docker_default  Created                                                                                                        0.0s \n ‚úî Container docker-app-1  Started                                                                                                        0.1s \nWaiting for containers to be healthy...\nStill waiting for containers to be healthy... (2 seconds elapsed)\nStill waiting for containers to be healthy... (4 seconds elapsed)\nStill waiting for containers to be healthy... (6 seconds elapsed)\nStill waiting for containers to be healthy... (8 seconds elapsed)\nStill waiting for containers to be healthy... (10 seconds elapsed)\nStill waiting for containers to be healthy... (12 seconds elapsed)\nStill waiting for containers to be healthy... (14 seconds elapsed)\nStill waiting for containers to be healthy... (16 seconds elapsed)\nStill waiting for containers to be healthy... (18 seconds elapsed)\nStill waiting for containers to be healthy... (20 seconds elapsed)\nTimeout waiting for containers to be healthy! Container logs:\napp-1  | üìÇ Changed to backend directory\napp-1  | üöÄ Starting the application...\napp-1  | ‚ùå Failed to start the application\napp-1  | /app/start.sh: line 9: pnpm: not found\nError: Containers failed to start within timeout period.",
  "commitMessage": "fix: add pnpm installation to final Docker stage\n\nThe start.sh script requires pnpm to be available in the final Docker stage.\nAdded pnpm installation using npm install -g pnpm to ensure the start script\ncan execute properly.",
  "stats": {
    "inputTokens": 6971,
    "cacheWriteTokens": 9697,
    "cacheReadTokens": 19394,
    "outputTokens": 406,
    "totalTokens": null,
    "cost": 0.0518887125,
    "currency": "gbp",
    "processingMillis": 9985,
    "git": {
      "filesChanged": 1,
      "insertions": 3,
      "deletions": 2,
      "linesChanged": 3,
      "testFilesChanged": 0,
      "testInsertions": 0,
      "testDeletions": 0,
      "testLinesChanged": 0
    }
  }
}